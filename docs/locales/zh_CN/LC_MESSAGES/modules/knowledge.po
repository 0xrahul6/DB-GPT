# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, csunny
# This file is distributed under the same license as the DB-GPT package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: DB-GPT 0.3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-07-12 11:57+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../modules/knowledge.rst:2 ../../modules/knowledge.rst:98
#: ca36c0ca545c4d70b51fe811a3e7caca
msgid "Knowledge"
msgstr "知识"

#: ../../modules/knowledge.rst:4 37818bc0ace74e008a52dbd838898c87
#, fuzzy
msgid ""
"As the knowledge base is currently the most significant user demand "
"scenario, we natively support the construction and processing of "
"knowledge bases. At the same time, we also provide multiple knowledge "
"base management strategies in this project, such as pdf knowledge,md "
"knowledge, txt knowledge, word knowledge, ppt knowledge:"
msgstr ""
"由于知识库是当前用户需求最显著的场景，我们原生支持知识库的构建和处理。同时，我们还在本项目中提供了多种知识库管理策略，如:pdf,md , "
"txt, word, ppt"

#: ../../modules/knowledge.rst:6 ../../modules/knowledge.rst:13
#: c92bd129bf5043fd9d6224d245cc9a55
#, fuzzy
msgid ""
"We currently support many document formats: raw text, txt, pdf, md, html,"
" doc, ppt, and url."
msgstr "当前支持txt, pdf, md, html, doc, ppt, url文档格式"

#: ../../modules/knowledge.rst:9 eec1169fea7a4a669433c347a4d929a2
msgid "**Create your own knowledge repository**"
msgstr "创建你自己的知识库"

#: ../../modules/knowledge.rst:11 20565959da0842aa9f5bb3fe8fb37e10
msgid "1.prepare"
msgstr "准备"

#: ../../modules/knowledge.rst:15 515555d13e7548deb596d80ea1514bb2
msgid "before execution:"
msgstr "开始前"

#: ../../modules/knowledge.rst:21 3333f92965ee41ea9cfa542de6c1e976
msgid ""
"2.prepare embedding model, you can download from https://huggingface.co/."
" Notice you have installed git-lfs. eg: git clone "
"https://huggingface.co/THUDM/chatglm2-6b"
msgstr "提前准备Embedding Model, 你可以在https://huggingface.co/进行下载，注意：你需要先安装git-lfs.eg: git clone "
"https://huggingface.co/THUDM/chatglm2-6b"

#: ../../modules/knowledge.rst:29 7abcbe007d594f4aaa43ddef88ef4d89
msgid ""
"3.prepare vector_store instance and vector store config, now we support "
"Chroma, Milvus and Weaviate."
msgstr "提前准备向量数据库环境，目前支持Chroma, Milvus and Weaviate向量数据库"

#: ../../modules/knowledge.rst:50 058fa57484a64756ab2650b46f4b33bf
msgid ""
"3.init Url Type EmbeddingEngine api and embedding your document into "
"vector store in your code."
msgstr "初始化 Url类型 EmbeddingEngine api， 将url文档embedding向量化到向量数据库 "

#: ../../modules/knowledge.rst:62 5f255b96abd346479ab3c371393e47dc
#, fuzzy
msgid ""
"4.init Document Type EmbeddingEngine api and embedding your document into"
" vector store in your code. Document type can be .txt, .pdf, .md, .doc, "
".ppt."
msgstr ""
"初始化 文档型类型 EmbeddingEngine api， 将文档embedding向量化到向量数据库(文档可以是.txt, .pdf, "
".md, .html, .doc, .ppt)"

#: ../../modules/knowledge.rst:75 d8c85ba7714749269714b03857738f70
msgid ""
"5.init TEXT Type EmbeddingEngine api and embedding your document into "
"vector store in your code."
msgstr "初始化TEXT类型 EmbeddingEngine api， 将文档embedding向量化到向量数据库"

#: ../../modules/knowledge.rst:87 c59e4650d57e44ae8d967768dddf908a
msgid "4.similar search based on your knowledge base. ::"
msgstr "在知识库进行相似性搜索"

#: ../../modules/knowledge.rst:93 f500fcdc791c4286b411819ae9ab3dc6
msgid ""
"Note that the default vector model used is text2vec-large-chinese (which "
"is a large model, so if your personal computer configuration is not "
"enough, it is recommended to use text2vec-base-chinese). Therefore, "
"ensure that you download the model and place it in the models directory."
msgstr ""
"注意，这里默认向量模型是text2vec-large-chinese(模型比较大，如果个人电脑配置不够建议采用text2vec-base-"
"chinese),因此确保需要将模型download下来放到models目录中。"

#: ../../modules/knowledge.rst:95 62a5e10a19844ba9955113f5c78cb460
msgid ""
"`pdf_embedding <./knowledge/pdf_embedding.html>`_: supported pdf "
"embedding."
msgstr "pdf_embedding <./knowledge/pdf_embedding.html>`_: supported pdf embedding."

#~ msgid "before execution:  python -m spacy download zh_core_web_sm"
#~ msgstr "在执行之前请先执行python -m spacy download zh_core_web_sm"

#~ msgid "2.Run the knowledge repository script in the tools directory."
#~ msgstr "3.在tools目录执行知识入库脚本"

#~ msgid ""
#~ "python tools/knowledge_init.py note : "
#~ "--vector_name : your vector store name"
#~ "  default_value:default"
#~ msgstr ""

#~ msgid ""
#~ "3.Add the knowledge repository in the"
#~ " interface by entering the name of"
#~ " your knowledge repository (if not "
#~ "specified, enter \"default\") so you can"
#~ " use it for Q&A based on your"
#~ " knowledge base."
#~ msgstr "如果选择新增知识库，在界面上新增知识库输入你的知识库名"

#~ msgid ""
#~ "1.Place personal knowledge files or "
#~ "folders in the pilot/datasets directory."
#~ msgstr "1.将个人知识文件或文件夹放在pilot/datasets目录中。"

#~ msgid ""
#~ "2.Update your .env, set your vector "
#~ "store type, VECTOR_STORE_TYPE=Chroma (now only"
#~ " support Chroma and Milvus, if you"
#~ " set Milvus, please set MILVUS_URL "
#~ "and MILVUS_PORT)"
#~ msgstr "2.更新你的.env，设置你的向量存储类型，VECTOR_STORE_TYPE=Chroma(现在只支持Chroma和Milvus，如果你设置了Milvus，请设置MILVUS_URL和MILVUS_PORT)"

